{"ast":null,"code":"import _classCallCheck from\"C:/Users/User/source/repos/Learning/React/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/User/source/repos/Learning/React/hello-world/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/User/source/repos/Learning/React/hello-world/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/User/source/repos/Learning/React/hello-world/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/User/source/repos/Learning/React/hello-world/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Baby=/*#__PURE__*/function(_Component){_inherits(Baby,_Component);var _super=_createSuper(Baby);function Baby(props){var _this;_classCallCheck(this,Baby);_this=_super.call(this,props);_this.state={//    isRightDad: true,\nisGetData:false,Mom:\"\"};_this.ajaxSimulator=_this.ajaxSimulator.bind(_assertThisInitialized(_this));return _this;}// version 17後，componentWillMount()將會被改為UNSAFE_componentWillMount()\n// 已被 componentDidMount 取代，和 componentWill「Un」Mount 不是同一個東西\n// componentWillMount(){\n//     if(this.props.dad!==\"Chang\")\n//         this.setState({isRightDad:false})\n// }\n_createClass(Baby,[{key:\"ajaxSimulator\",value:function ajaxSimulator(){var _this2=this;setTimeout(function(){_this2.setState({isGetData:true,Mom:\"小美\"});},3000);}},{key:\"componentDidMount\",value:function componentDidMount(){this.ajaxSimulator();document.getElementById(\"talk\").append(\"爸!\");window.addEventListener('mousedown',this.IWasClick);// <-- 示範移除監聽事件\n}// 這個是重點，在Baby不再被App的sendBaby生出來的時候，App的render會知道 Baby 不在了！\n// 於是App的render後，會跑來Baby這邊，去進行這個︰\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){document.getElementById(\"talk\").innerHTML=\"\";window.removeEventListener('mousedown',this.IWasClick);// <-- 示範移除監聽事件\n}// 另一種新增和刪除元素的參考︰\n// componentDidMount(){\n//     document.getElementById(\"talk\").append(\n//         '<div id=\"callDad\">爸!</div>'\n//     )\n// }\n// 示範移除監聽事件\n},{key:\"IWasClick\",value:function IWasClick(){console.log(\"啊!我被點了!\");}},{key:\"render\",value:function render(){if(this.state.isGetData===false)return/*#__PURE__*/_jsx(\"div\",{id:\"msg\",children:\"\\u8B80\\u53D6\\u4E2D\"});else return/*#__PURE__*/_jsxs(\"div\",{id:\"msg\",children:[\"\\u4ED6\\u7684\\u5ABD\\u5ABD\\u662F\",this.state.Mom]});}}]);return Baby;}(Component);export default Baby;","map":{"version":3,"names":["React","Component","Baby","props","state","isGetData","Mom","ajaxSimulator","bind","setTimeout","setState","document","getElementById","append","window","addEventListener","IWasClick","innerHTML","removeEventListener","console","log"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/Baby.js"],"sourcesContent":["import React, { Component } from 'react';\r\nclass Baby extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n    //    isRightDad: true,\r\n        isGetData: false,\r\n        Mom: \"\"\r\n    }\r\n    this.ajaxSimulator=this.ajaxSimulator.bind(this)\r\n  }\r\n\r\n    // version 17後，componentWillMount()將會被改為UNSAFE_componentWillMount()\r\n    // 已被 componentDidMount 取代，和 componentWill「Un」Mount 不是同一個東西\r\n\r\n    // componentWillMount(){\r\n    //     if(this.props.dad!==\"Chang\")\r\n    //         this.setState({isRightDad:false})\r\n    // }\r\n\r\n    ajaxSimulator(){\r\n        setTimeout(()=>{this.setState({isGetData:true, Mom:\"小美\"})},3000)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.ajaxSimulator();\r\n        document.getElementById(\"talk\").append(\"爸!\")\r\n        window.addEventListener('mousedown', this.IWasClick)// <-- 示範移除監聽事件\r\n    }\r\n\r\n    // 這個是重點，在Baby不再被App的sendBaby生出來的時候，App的render會知道 Baby 不在了！\r\n    // 於是App的render後，會跑來Baby這邊，去進行這個︰\r\n    componentWillUnmount(){\r\n        document.getElementById(\"talk\").innerHTML=\"\";\r\n        window.removeEventListener('mousedown',this.IWasClick);// <-- 示範移除監聽事件\r\n    }\r\n\r\n    // 另一種新增和刪除元素的參考︰\r\n    // componentDidMount(){\r\n    //     document.getElementById(\"talk\").append(\r\n    //         '<div id=\"callDad\">爸!</div>'\r\n    //     )\r\n    // }\r\n\r\n    // 示範移除監聽事件\r\n    IWasClick(){\r\n        console.log(\"啊!我被點了!\")\r\n    } \r\n\r\n    render(){\r\n        if(this.state.isGetData===false)\r\n            return(\r\n                <div id=\"msg\">讀取中</div>\r\n            );\r\n        else\r\n            return(\r\n                <div id=\"msg\">他的媽媽是{this.state.Mom}</div>\r\n            );                \r\n    }\r\n}\r\nexport default Baby;\r\n"],"mappings":"urBAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FACMC,K,4FACJ,cAAYC,KAAZ,CAAmB,sCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAW,CACX;AACIC,SAAS,CAAE,KAFJ,CAGPC,GAAG,CAAE,EAHE,CAAX,CAKA,MAAKC,aAAL,CAAmB,MAAKA,aAAL,CAAmBC,IAAnB,+BAAnB,CAPiB,aAQlB,CAEC;AACA;AAEA;AACA;AACA;AACA;8CAEA,wBAAe,iBACXC,UAAU,CAAC,UAAI,CAAC,MAAI,CAACC,QAAL,CAAc,CAACL,SAAS,CAAC,IAAX,CAAiBC,GAAG,CAAC,IAArB,CAAd,EAA0C,CAAhD,CAAiD,IAAjD,CAAV,CACH,C,iCAED,4BAAmB,CACf,KAAKC,aAAL,GACAI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,MAAhC,CAAuC,IAAvC,EACAC,MAAM,CAACC,gBAAP,CAAwB,WAAxB,CAAqC,KAAKC,SAA1C,EAAoD;AACvD,CAED;AACA;oCACA,+BAAsB,CAClBL,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCK,SAAhC,CAA0C,EAA1C,CACAH,MAAM,CAACI,mBAAP,CAA2B,WAA3B,CAAuC,KAAKF,SAA5C,EAAuD;AAC1D,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;yBACA,oBAAW,CACPG,OAAO,CAACC,GAAR,CAAY,SAAZ,EACH,C,sBAED,iBAAQ,CACJ,GAAG,KAAKhB,KAAL,CAAWC,SAAX,GAAuB,KAA1B,CACI,mBACI,YAAK,EAAE,CAAC,KAAR,gCADJ,CADJ,IAKI,oBACI,aAAK,EAAE,CAAC,KAAR,4CAAoB,KAAKD,KAAL,CAAWE,GAA/B,GADJ,CAGP,C,kBAzDcL,S,EA2DnB,cAAeC,KAAf"},"metadata":{},"sourceType":"module"}