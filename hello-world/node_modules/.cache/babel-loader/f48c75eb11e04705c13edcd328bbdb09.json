{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Learning\\\\React\\\\hello-world\\\\src\\\\FrontEndRoute\\\\AgentRoute.js\";\nimport React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport FirstPage from \"./FirstPage\"; //import SecondPage from \"./SecondPage\";\n// 記得要先在這個專案的路徑︰ npm i react-router-dom\n//在react-router-dom中，最常使用的是這兩種router介面:\n//1.    HashRouter: 頁面路徑最前面會有個「#」，換url時「不會」發送request。\n//2.    BrowserRouter: 頁面路徑不會有井字，但換url時「會」發送request。\n// 簡單來說，由於#是用來判斷是否要發送request的工具，\n// 反言之如果要使用BrowserRouter，server必須要有對應的response\n// (最簡單的方法就是要請後端幫你設定好除了api以外的request都回傳你的index.html\n// (要請到後端的話…不如就加個index就好？)\n// 因為此系列我們沒有要講後端，所以我們這邊使用HashRouter\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AgentRoute = () => {\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      component: FirstPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AgentRoute;\nexport default AgentRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgentRoute\");","map":{"version":3,"names":["React","HashRouter","Route","FirstPage","AgentRoute"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/FrontEndRoute/AgentRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport FirstPage from \"./FirstPage\";\r\n//import SecondPage from \"./SecondPage\";\r\n\r\n// 記得要先在這個專案的路徑︰ npm i react-router-dom\r\n\r\n//在react-router-dom中，最常使用的是這兩種router介面:\r\n//1.    HashRouter: 頁面路徑最前面會有個「#」，換url時「不會」發送request。\r\n//2.    BrowserRouter: 頁面路徑不會有井字，但換url時「會」發送request。\r\n// 簡單來說，由於#是用來判斷是否要發送request的工具，\r\n// 反言之如果要使用BrowserRouter，server必須要有對應的response\r\n// (最簡單的方法就是要請後端幫你設定好除了api以外的request都回傳你的index.html\r\n// (要請到後端的話…不如就加個index就好？)\r\n// 因為此系列我們沒有要講後端，所以我們這邊使用HashRouter\r\n\r\nconst AgentRoute = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Route path=\"/\" component={FirstPage}/>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default AgentRoute;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACrB,oBACI,QAAC,UAAD;IAAA,uBACI,QAAC,KAAD;MAAO,IAAI,EAAC,GAAZ;MAAgB,SAAS,EAAED;IAA3B;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAND;;KAAMC,U;AAQN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}