{"ast":null,"code":"// #region 1-4\n// export default function Invoices() {\n//     return (\n//       <main style={{ padding: \"1rem 0\" }}>\n//         <h2>Invoices</h2>\n//       </main>\n//     );\n//   }\n// #endregion\n// #region 5\n// import { Link, Outlet } from \"react-router-dom\";\n// import { getInvoices } from \"./Data.js\"\n// export default function Invoices() {\n//   let invoices = getInvoices(); // 引用另外一個檔案的方法\n//   return (\n//     <div style={{ display: \"flex\" }}>\n//       <nav\n//         style={{\n//           borderRight: \"solid 1px\",\n//           padding: \"1rem\",\n//         }}\n//       >\n//         {/* 這裡開始用迴圈做酷酷的事了！ */}\n//         {invoices.map((invoice) => (\n//           <Link\n//             style={{ display: \"block\", margin: \"1rem 0\" }}\n//             to={`/invoices/${invoice.number}`}\n//             key={invoice.number}\n//           >\n//             {invoice.name}\n//           </Link>\n//         ))}\n//         {/* 左手邊會多一條目錄 */}\n//       </nav>\n//       <Outlet /> \n//       {/* 為了再顯示多一個子頁(右邊)，記得加這個！ Outlet */}\n//     </div>\n//   );\n// }\n// #endregion\n// #region 6 NavLink 可變色的動態 Link\n// 對比一般的Link 而言，就是可以做這樣的事︰\n// normal string\n//<NavLink className=\"red\" />\n// function\n//<NavLink className={({ isActive }) => isActive ? \"red\" : \"blue\"} />\n\n/* isActive 這個參數是 NavLink 自帶的吧？ 並沒有特別的輸入 */\n// import { NavLink, Outlet } from \"react-router-dom\";\n// import { getInvoices } from \"./Data\";\n// export default function Invoices() {\n//   let invoices = getInvoices();\n//   return (\n//     <div style={{ display: \"flex\" }}>\n//       <nav\n//         style={{\n//           borderRight: \"solid 1px\",\n//           padding: \"1rem\",\n//         }}\n//       >\n//         {/* 使用動態的NavLink而不是靜態的Link，可以和上方的迴圈做對比。 */}\n//         {/* 分別是可以在style之中設定顏色？ */}\n//         {invoices.map((invoice) => (\n//           <NavLink\n//             style={({ isActive }) => {\n//               return {\n//                 display: \"block\",\n//                 margin: \"1rem 0\",\n//                 color: isActive ? \"red\" : \"\",\n//               };\n//             }}\n//             to={`/invoices/${invoice.number}`}\n//             key={invoice.number}\n//           >\n//             {invoice.name}\n//           </NavLink>\n//         ))}\n//       </nav>\n//       <Outlet />\n//     </div>\n//   );\n// }\n// #endregion\n// #region 7 多參數\n// #endregion","map":{"version":3,"names":[],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/Routing/Invoices.js"],"sourcesContent":["// #region 1-4\r\n\r\n// export default function Invoices() {\r\n//     return (\r\n//       <main style={{ padding: \"1rem 0\" }}>\r\n//         <h2>Invoices</h2>\r\n//       </main>\r\n//     );\r\n//   }\r\n\r\n// #endregion\r\n\r\n// #region 5\r\n\r\n// import { Link, Outlet } from \"react-router-dom\";\r\n// import { getInvoices } from \"./Data.js\"\r\n\r\n// export default function Invoices() {\r\n//   let invoices = getInvoices(); // 引用另外一個檔案的方法\r\n//   return (\r\n//     <div style={{ display: \"flex\" }}>\r\n//       <nav\r\n//         style={{\r\n//           borderRight: \"solid 1px\",\r\n//           padding: \"1rem\",\r\n//         }}\r\n//       >\r\n//         {/* 這裡開始用迴圈做酷酷的事了！ */}\r\n//         {invoices.map((invoice) => (\r\n//           <Link\r\n//             style={{ display: \"block\", margin: \"1rem 0\" }}\r\n//             to={`/invoices/${invoice.number}`}\r\n//             key={invoice.number}\r\n//           >\r\n//             {invoice.name}\r\n//           </Link>\r\n//         ))}\r\n//         {/* 左手邊會多一條目錄 */}\r\n//       </nav>\r\n//       <Outlet /> \r\n//       {/* 為了再顯示多一個子頁(右邊)，記得加這個！ Outlet */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// #endregion\r\n\r\n// #region 6 NavLink 可變色的動態 Link\r\n\r\n// 對比一般的Link 而言，就是可以做這樣的事︰\r\n// normal string\r\n//<NavLink className=\"red\" />\r\n// function\r\n//<NavLink className={({ isActive }) => isActive ? \"red\" : \"blue\"} />\r\n/* isActive 這個參數是 NavLink 自帶的吧？ 並沒有特別的輸入 */\r\n\r\n// import { NavLink, Outlet } from \"react-router-dom\";\r\n// import { getInvoices } from \"./Data\";\r\n\r\n// export default function Invoices() {\r\n//   let invoices = getInvoices();\r\n//   return (\r\n//     <div style={{ display: \"flex\" }}>\r\n//       <nav\r\n//         style={{\r\n//           borderRight: \"solid 1px\",\r\n//           padding: \"1rem\",\r\n//         }}\r\n//       >\r\n//         {/* 使用動態的NavLink而不是靜態的Link，可以和上方的迴圈做對比。 */}\r\n//         {/* 分別是可以在style之中設定顏色？ */}\r\n//         {invoices.map((invoice) => (\r\n//           <NavLink\r\n//             style={({ isActive }) => {\r\n//               return {\r\n//                 display: \"block\",\r\n//                 margin: \"1rem 0\",\r\n//                 color: isActive ? \"red\" : \"\",\r\n//               };\r\n//             }}\r\n//             to={`/invoices/${invoice.number}`}\r\n//             key={invoice.number}\r\n//           >\r\n//             {invoice.name}\r\n//           </NavLink>\r\n//         ))}\r\n//       </nav>\r\n//       <Outlet />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// #endregion\r\n\r\n// #region 7 多參數\r\n\r\n// #endregion"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}