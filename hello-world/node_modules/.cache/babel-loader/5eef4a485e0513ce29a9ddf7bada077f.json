{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Learning\\\\React\\\\hello-world\\\\src\\\\Routing\\\\Invoices.js\",\n    _s = $RefreshSig$();\n\n// #region 1-4\n// export default function Invoices() {\n//     return (\n//       <main style={{ padding: \"1rem 0\" }}>\n//         <h2>Invoices</h2>\n//       </main>\n//     );\n//   }\n// #endregion\n// #region 5\n// import { Link, Outlet } from \"react-router-dom\";\n// import { getInvoices } from \"./Data.js\"\n// export default function Invoices() {\n//   let invoices = getInvoices(); // 引用另外一個檔案的方法\n//   return (\n//     <div style={{ display: \"flex\" }}>\n//       <nav\n//         style={{\n//           borderRight: \"solid 1px\",\n//           padding: \"1rem\",\n//         }}\n//       >\n//         {/* 這裡開始用迴圈做酷酷的事了！ */}\n//         {invoices.map((invoice) => (\n//           <Link\n//             style={{ display: \"block\", margin: \"1rem 0\" }}\n//             to={`/invoices/${invoice.number}`}\n//             key={invoice.number}\n//           >\n//             {invoice.name}\n//           </Link>\n//         ))}\n//         {/* 左手邊會多一條目錄 */}\n//       </nav>\n//       <Outlet /> \n//       {/* 為了再顯示多一個子頁(右邊)，記得加這個！ Outlet */}\n//     </div>\n//   );\n// }\n// #endregion\n// #region 6 NavLink 可變色的動態 Link\n// 對比一般的Link 而言，就是可以做這樣的事︰\n// normal string\n//<NavLink className=\"red\" />\n// function\n//<NavLink className={({ isActive }) => isActive ? \"red\" : \"blue\"} />\n\n/* isActive 這個參數是 NavLink 自帶的吧？ 並沒有特別的輸入 */\n// import { NavLink, Outlet } from \"react-router-dom\";\n// import { getInvoices } from \"./Data\";\n// export default function Invoices() {\n//   let invoices = getInvoices();\n//   return (\n//     <div style={{ display: \"flex\" }}>\n//       <nav\n//         style={{\n//           borderRight: \"solid 1px\",\n//           padding: \"1rem\",\n//         }}\n//       >\n//         {/* 使用動態的NavLink而不是靜態的Link，可以和上方的迴圈做對比。 */}\n//         {/* 分別是可以在style之中設定顏色？ */}\n//         {invoices.map((invoice) => (\n//           <NavLink\n//             style={({ isActive }) => {\n//               return {\n//                 display: \"block\",\n//                 margin: \"1rem 0\",\n//                 color: isActive ? \"red\" : \"\",\n//               };\n//             }}\n//             to={`/invoices/${invoice.number}`}\n//             key={invoice.number}\n//           >\n//             {invoice.name}\n//           </NavLink>\n//         ))}\n//       </nav>\n//       <Outlet />\n//     </div>\n//   );\n// }\n// #endregion\n// #region 7 在目錄列之中，加一個動態的 Filter\nimport { NavLink, Outlet, useSearchParams } from \"react-router-dom\"; // useSearchParams <--是重點\n\nimport { getInvoices } from \"./Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Invoices() {\n  _s();\n\n  let invoices = getInvoices();\n  let [searchParams, setSearchParams] = useSearchParams(); // 設定這個變數\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        borderRight: \"solid 1px\",\n        padding: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchParams.get(\"filter\") || \"\",\n        onChange: event => {\n          let filter = event.target.value;\n\n          if (filter) {\n            setSearchParams({\n              filter\n            });\n          } else {\n            setSearchParams({});\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), invoices.filter(invoice => {\n        let filter = searchParams.get(\"filter\");\n        if (!filter) return true;\n        let name = invoice.name.toLowerCase();\n        return name.startsWith(filter.toLowerCase());\n      }).map(invoice => /*#__PURE__*/_jsxDEV(NavLink, {\n        style: _ref => {\n          let {\n            isActive\n          } = _ref;\n          return {\n            display: \"block\",\n            margin: \"1rem 0\",\n            color: isActive ? \"red\" : \"\"\n          };\n        },\n        to: `/invoices/${invoice.number}`,\n        children: invoice.name\n      }, invoice.number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n} // #endregion\n\n_s(Invoices, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Invoices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoices\");","map":{"version":3,"names":["NavLink","Outlet","useSearchParams","getInvoices","Invoices","invoices","searchParams","setSearchParams","display","borderRight","padding","get","event","filter","target","value","invoice","name","toLowerCase","startsWith","map","isActive","margin","color","number"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/Routing/Invoices.js"],"sourcesContent":["// #region 1-4\r\n\r\n// export default function Invoices() {\r\n//     return (\r\n//       <main style={{ padding: \"1rem 0\" }}>\r\n//         <h2>Invoices</h2>\r\n//       </main>\r\n//     );\r\n//   }\r\n\r\n// #endregion\r\n\r\n// #region 5\r\n\r\n// import { Link, Outlet } from \"react-router-dom\";\r\n// import { getInvoices } from \"./Data.js\"\r\n\r\n// export default function Invoices() {\r\n//   let invoices = getInvoices(); // 引用另外一個檔案的方法\r\n//   return (\r\n//     <div style={{ display: \"flex\" }}>\r\n//       <nav\r\n//         style={{\r\n//           borderRight: \"solid 1px\",\r\n//           padding: \"1rem\",\r\n//         }}\r\n//       >\r\n//         {/* 這裡開始用迴圈做酷酷的事了！ */}\r\n//         {invoices.map((invoice) => (\r\n//           <Link\r\n//             style={{ display: \"block\", margin: \"1rem 0\" }}\r\n//             to={`/invoices/${invoice.number}`}\r\n//             key={invoice.number}\r\n//           >\r\n//             {invoice.name}\r\n//           </Link>\r\n//         ))}\r\n//         {/* 左手邊會多一條目錄 */}\r\n//       </nav>\r\n//       <Outlet /> \r\n//       {/* 為了再顯示多一個子頁(右邊)，記得加這個！ Outlet */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// #endregion\r\n\r\n// #region 6 NavLink 可變色的動態 Link\r\n\r\n// 對比一般的Link 而言，就是可以做這樣的事︰\r\n// normal string\r\n//<NavLink className=\"red\" />\r\n// function\r\n//<NavLink className={({ isActive }) => isActive ? \"red\" : \"blue\"} />\r\n/* isActive 這個參數是 NavLink 自帶的吧？ 並沒有特別的輸入 */\r\n\r\n// import { NavLink, Outlet } from \"react-router-dom\";\r\n// import { getInvoices } from \"./Data\";\r\n\r\n// export default function Invoices() {\r\n//   let invoices = getInvoices();\r\n//   return (\r\n//     <div style={{ display: \"flex\" }}>\r\n//       <nav\r\n//         style={{\r\n//           borderRight: \"solid 1px\",\r\n//           padding: \"1rem\",\r\n//         }}\r\n//       >\r\n//         {/* 使用動態的NavLink而不是靜態的Link，可以和上方的迴圈做對比。 */}\r\n//         {/* 分別是可以在style之中設定顏色？ */}\r\n//         {invoices.map((invoice) => (\r\n//           <NavLink\r\n//             style={({ isActive }) => {\r\n//               return {\r\n//                 display: \"block\",\r\n//                 margin: \"1rem 0\",\r\n//                 color: isActive ? \"red\" : \"\",\r\n//               };\r\n//             }}\r\n//             to={`/invoices/${invoice.number}`}\r\n//             key={invoice.number}\r\n//           >\r\n//             {invoice.name}\r\n//           </NavLink>\r\n//         ))}\r\n//       </nav>\r\n//       <Outlet />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// #endregion\r\n\r\n// #region 7 在目錄列之中，加一個動態的 Filter\r\n\r\nimport {\r\n  NavLink,\r\n  Outlet,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\n// useSearchParams <--是重點\r\nimport { getInvoices } from \"./Data\";\r\n\r\nexport default function Invoices() {\r\n  let invoices = getInvoices();\r\n  let [searchParams, setSearchParams] = useSearchParams();  // 設定這個變數\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <nav\r\n        style={{\r\n          borderRight: \"solid 1px\",\r\n          padding: \"1rem\",\r\n        }}\r\n      >\r\n        {/* 設定一個可以輸入 filter 條件的 input */}\r\n        <input\r\n          value={searchParams.get(\"filter\") || \"\"}\r\n          onChange={(event) => {\r\n            let filter = event.target.value;\r\n            if (filter) {\r\n              setSearchParams({ filter });\r\n            } else {\r\n              setSearchParams({});\r\n            }\r\n          }}\r\n        />\r\n        {/* value = 一個 or 的涵式，前者為false的追話，則執行後者，我想前者一定都false*/}\r\n        {invoices\r\n          .filter((invoice) => {\r\n            let filter = searchParams.get(\"filter\");\r\n            if (!filter) return true;\r\n            let name = invoice.name.toLowerCase();\r\n            return name.startsWith(filter.toLowerCase());\r\n          })\r\n          .map((invoice) => (\r\n            <NavLink\r\n              style={({ isActive }) => ({\r\n                display: \"block\",\r\n                margin: \"1rem 0\",\r\n                color: isActive ? \"red\" : \"\",\r\n              })}\r\n              to={`/invoices/${invoice.number}`}\r\n              key={invoice.number}\r\n            >\r\n              {invoice.name}\r\n            </NavLink>\r\n          ))}\r\n      </nav>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n\r\n// #endregion"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,SACEA,OADF,EAEEC,MAFF,EAGEC,eAHF,QAIO,kBAJP,C,CAKA;;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EACjC,IAAIC,QAAQ,GAAGF,WAAW,EAA1B;EACA,IAAI,CAACG,YAAD,EAAeC,eAAf,IAAkCL,eAAe,EAArD,CAFiC,CAEyB;;EAC1D,oBACE;IAAK,KAAK,EAAE;MAAEM,OAAO,EAAE;IAAX,CAAZ;IAAA,wBACE;MACE,KAAK,EAAE;QACLC,WAAW,EAAE,WADR;QAELC,OAAO,EAAE;MAFJ,CADT;MAAA,wBAOE;QACE,KAAK,EAAEJ,YAAY,CAACK,GAAb,CAAiB,QAAjB,KAA8B,EADvC;QAEE,QAAQ,EAAGC,KAAD,IAAW;UACnB,IAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;;UACA,IAAIF,MAAJ,EAAY;YACVN,eAAe,CAAC;cAAEM;YAAF,CAAD,CAAf;UACD,CAFD,MAEO;YACLN,eAAe,CAAC,EAAD,CAAf;UACD;QACF;MATH;QAAA;QAAA;QAAA;MAAA,QAPF,EAmBGF,QAAQ,CACNQ,MADF,CACUG,OAAD,IAAa;QACnB,IAAIH,MAAM,GAAGP,YAAY,CAACK,GAAb,CAAiB,QAAjB,CAAb;QACA,IAAI,CAACE,MAAL,EAAa,OAAO,IAAP;QACb,IAAII,IAAI,GAAGD,OAAO,CAACC,IAAR,CAAaC,WAAb,EAAX;QACA,OAAOD,IAAI,CAACE,UAAL,CAAgBN,MAAM,CAACK,WAAP,EAAhB,CAAP;MACD,CANF,EAOEE,GAPF,CAOOJ,OAAD,iBACH,QAAC,OAAD;QACE,KAAK,EAAE;UAAA,IAAC;YAAEK;UAAF,CAAD;UAAA,OAAmB;YACxBb,OAAO,EAAE,OADe;YAExBc,MAAM,EAAE,QAFgB;YAGxBC,KAAK,EAAEF,QAAQ,GAAG,KAAH,GAAW;UAHF,CAAnB;QAAA,CADT;QAME,EAAE,EAAG,aAAYL,OAAO,CAACQ,MAAO,EANlC;QAAA,UASGR,OAAO,CAACC;MATX,GAOOD,OAAO,CAACQ,MAPf;QAAA;QAAA;QAAA;MAAA,QARH,CAnBH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAyCE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAzCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD,C,CAED;;GAlDwBpB,Q;UAEgBF,e;;;KAFhBE,Q"},"metadata":{},"sourceType":"module"}