{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Learning\\\\React\\\\hello-world\\\\src\\\\intergratePractice\\\\ProgressDIY_func.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react'; // 引入useState、useEffect、useRef，不用引入component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressDIY_func = props => {\n  _s();\n\n  // 記得參數要有props，export也要記得寫。\n  const [percent, setPercent] = useState(10); //和 component 的 state 是同一回事\n  //在開始加入useEffect前，我們要思考的事情是:\n  //我目前要實現的事情中，有哪些事情是依賴「監控相同參數的變動」? 是不是第一次要執行?\n  //1.第一次渲染時的初始值設定 (只有第一次要執行)\n  //2.由長變短漸變。(依賴props.value和percent，但第一次不能執行)\n  //3.由短變長漸變。(依賴props.value和percent，但第一次不能執行)\n  //我們2和3一定可以放在同一個effect中。\n  //又因為任何effect第一次都會執行，所以只要想辦法在這個effect中分隔出「第一渲染、非第一次渲染」，\n  //就能把這三件事都放在同一個effect中。\n\n  const tm = useRef(); // 這裡也是要用useRef去創造用來存setTimeout的變數。\n\n  const tmTwo = useRef();\n  const mounted = useRef(); //預設為false?\n\n  useEffect(() => {\n    if (!mounted.current) {\n      // = componentDidMount(第一次做)\n      mounted.current = true; // .current 是從哪來的？反正這個 useRef 的 Hook 就是長這樣… \n\n      setPercent(props.value); //第一次，我接收外面的值value作為這裡的percent\n    } else {\n      // = componentDidUpdate(多及無限次)\n      if (percent > props.value) {\n        //按鈕改了props.value，percent是目前的逐漸改變。\n        if (tm.current) //除了.current 這個東東之外，其他和 Class Component 一樣，(見Progress_alt) \n          clearTimeout(tm.current);\n        tmTwo.current = setTimeout(() => {\n          setPercent(percent - 1);\n        }, 20);\n      } else if (percent < props.value) {\n        if (tmTwo.current) clearTimeout(tmTwo.current);\n        tm.current = setTimeout(() => {\n          setPercent(percent + 1);\n        }, 20);\n      }\n    }\n  }, [props.value, percent]); //props.value是初始值，也是 onClick 會去改的。\n  // percent 是上面的方法去自己改，改好了要持續render，和 Recursive ，所以也要監察。\n  //這部分和function差不多\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-back\",\n      style: {\n        backgroundColor: \"rgba(0,0,0,0.2)\",\n        width: \"200px\",\n        height: \"7px\",\n        borderRadius: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          backgroundColor: \"#fe5196\",\n          width: percent.toString() + \"%\",\n          height: \"100%\",\n          borderRadius: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), \"\\u76EE\\u524D\\u6BD4\\u7387: \", percent, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: 90,\n      onClick: props.onClick,\n      children: \"\\u589E\\u52A0\\u6BD4\\u7387\\u81F390\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: 10,\n      onClick: props.onClick,\n      children: \"\\u6E1B\\u5C11\\u6BD4\\u7387\\u81F310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProgressDIY_func, \"NnCg0Jd1F8G+rfYD5kCBR/vXoCg=\");\n\n_c = ProgressDIY_func;\nexport default ProgressDIY_func; //function component 照樣要寫 export \n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressDIY_func\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProgressDIY_func","props","percent","setPercent","tm","tmTwo","mounted","current","value","clearTimeout","setTimeout","backgroundColor","width","height","borderRadius","toString","onClick"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/intergratePractice/ProgressDIY_func.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n// 引入useState、useEffect、useRef，不用引入component\r\n\r\nconst ProgressDIY_func = (props) => { // 記得參數要有props，export也要記得寫。\r\n\r\n    const [percent, setPercent] = useState(10); //和 component 的 state 是同一回事\r\n\r\n    //在開始加入useEffect前，我們要思考的事情是:\r\n    //我目前要實現的事情中，有哪些事情是依賴「監控相同參數的變動」? 是不是第一次要執行?\r\n\r\n    //1.第一次渲染時的初始值設定 (只有第一次要執行)\r\n    //2.由長變短漸變。(依賴props.value和percent，但第一次不能執行)\r\n    //3.由短變長漸變。(依賴props.value和percent，但第一次不能執行)\r\n\r\n    //我們2和3一定可以放在同一個effect中。\r\n    //又因為任何effect第一次都會執行，所以只要想辦法在這個effect中分隔出「第一渲染、非第一次渲染」，\r\n    //就能把這三件事都放在同一個effect中。\r\n\r\n    const tm = useRef(); // 這裡也是要用useRef去創造用來存setTimeout的變數。\r\n    const tmTwo = useRef();\r\n\r\n    const mounted = useRef(); //預設為false?\r\n    useEffect(() => {\r\n        if (!mounted.current) { // = componentDidMount(第一次做)\r\n            mounted.current = true; // .current 是從哪來的？反正這個 useRef 的 Hook 就是長這樣… \r\n            setPercent(props.value); //第一次，我接收外面的值value作為這裡的percent\r\n        }\r\n        else {  // = componentDidUpdate(多及無限次)\r\n\r\n            if (percent > props.value) { //按鈕改了props.value，percent是目前的逐漸改變。\r\n                if (tm.current) //除了.current 這個東東之外，其他和 Class Component 一樣，(見Progress_alt) \r\n                    clearTimeout(tm.current)\r\n                tmTwo.current = setTimeout(() => { setPercent(percent - 1) }, 20);\r\n            }\r\n            else if (percent < props.value) {\r\n                if (tmTwo.current)\r\n                    clearTimeout(tmTwo.current)\r\n                tm.current = setTimeout(() => { setPercent(percent + 1) }, 20);\r\n            }\r\n\r\n        }\r\n    }, [props.value, percent]); //props.value是初始值，也是 onClick 會去改的。\r\n    // percent 是上面的方法去自己改，改好了要持續render，和 Recursive ，所以也要監察。\r\n\r\n    //這部分和function差不多\r\n    return (\r\n        <div>\r\n            <div className=\"progress-back\" style={{ backgroundColor: \"rgba(0,0,0,0.2)\", width: \"200px\", height: \"7px\", borderRadius: \"10px\" }}>\r\n                <div className=\"progress-bar\" style={{ backgroundColor: \"#fe5196\", width: percent.toString() + \"%\", height: \"100%\", borderRadius: \"10px\" }}></div>\r\n            </div>\r\n            目前比率: {percent}%\r\n            <br/>\r\n            <button value={90} onClick={props.onClick}>增加比率至90</button>\r\n            <br/>\r\n            <button value={10} onClick={props.onClick}>減少比率至10</button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProgressDIY_func; //function component 照樣要寫 export "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD,C,CACA;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAAA;;EAAE;EAElC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC,CAFgC,CAEY;EAE5C;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;;EAEA,MAAMO,EAAE,GAAGL,MAAM,EAAjB,CAfgC,CAeX;;EACrB,MAAMM,KAAK,GAAGN,MAAM,EAApB;EAEA,MAAMO,OAAO,GAAGP,MAAM,EAAtB,CAlBgC,CAkBN;;EAC1BD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,OAAO,CAACC,OAAb,EAAsB;MAAE;MACpBD,OAAO,CAACC,OAAR,GAAkB,IAAlB,CADkB,CACM;;MACxBJ,UAAU,CAACF,KAAK,CAACO,KAAP,CAAV,CAFkB,CAEO;IAC5B,CAHD,MAIK;MAAG;MAEJ,IAAIN,OAAO,GAAGD,KAAK,CAACO,KAApB,EAA2B;QAAE;QACzB,IAAIJ,EAAE,CAACG,OAAP,EAAgB;UACZE,YAAY,CAACL,EAAE,CAACG,OAAJ,CAAZ;QACJF,KAAK,CAACE,OAAN,GAAgBG,UAAU,CAAC,MAAM;UAAEP,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;QAAyB,CAAlC,EAAoC,EAApC,CAA1B;MACH,CAJD,MAKK,IAAIA,OAAO,GAAGD,KAAK,CAACO,KAApB,EAA2B;QAC5B,IAAIH,KAAK,CAACE,OAAV,EACIE,YAAY,CAACJ,KAAK,CAACE,OAAP,CAAZ;QACJH,EAAE,CAACG,OAAH,GAAaG,UAAU,CAAC,MAAM;UAAEP,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;QAAyB,CAAlC,EAAoC,EAApC,CAAvB;MACH;IAEJ;EACJ,CAnBQ,EAmBN,CAACD,KAAK,CAACO,KAAP,EAAcN,OAAd,CAnBM,CAAT,CAnBgC,CAsCJ;EAC5B;EAEA;;EACA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,eAAf;MAA+B,KAAK,EAAE;QAAES,eAAe,EAAE,iBAAnB;QAAsCC,KAAK,EAAE,OAA7C;QAAsDC,MAAM,EAAE,KAA9D;QAAqEC,YAAY,EAAE;MAAnF,CAAtC;MAAA,uBACI;QAAK,SAAS,EAAC,cAAf;QAA8B,KAAK,EAAE;UAAEH,eAAe,EAAE,SAAnB;UAA8BC,KAAK,EAAEV,OAAO,CAACa,QAAR,KAAqB,GAA1D;UAA+DF,MAAM,EAAE,MAAvE;UAA+EC,YAAY,EAAE;QAA7F;MAArC;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,gCAIWZ,OAJX,oBAKI;MAAA;MAAA;MAAA;IAAA,QALJ,eAMI;MAAQ,KAAK,EAAE,EAAf;MAAmB,OAAO,EAAED,KAAK,CAACe,OAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,eAOI;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAQ,KAAK,EAAE,EAAf;MAAmB,OAAO,EAAEf,KAAK,CAACe,OAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAvDD;;GAAMhB,gB;;KAAAA,gB;AAwDN,eAAeA,gBAAf,C,CAAiC"},"metadata":{},"sourceType":"module"}