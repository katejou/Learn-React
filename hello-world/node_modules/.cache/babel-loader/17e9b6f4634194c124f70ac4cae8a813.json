{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Learning\\\\React\\\\hello-world\\\\src\\\\Poor_Son.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Poor_Son extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feeling: \"bad\",\n      expectAmount: 100\n    };\n    this.argueForMore = this.argueForMore.bind(this); // 記得要註冊方法\n\n    this.setMyFeeling = this.setMyFeeling.bind(this);\n  }\n\n  componentDidMount() {}\n\n  argueForMore() {\n    // 這個方法，取得爸爸給他的 argue 方法。傳入相應的 target 和 amount 參數\n    this.props.argue(\"Son\", this.props.money + 40);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.money !== this.props.money) {\n      this.setMyFeeling();\n    }\n  }\n\n  setMyFeeling() {\n    if (this.props.money < this.state.expectAmount) // 爸爸給的機，影響了我的心情。\n      this.setState({\n        feeling: \"bad\"\n      });else this.setState({\n      feeling: \"good\"\n    });\n  } // 重點︰\n  // 注意要用if(prevProps.money!==this.props.money)去限制呼叫函式的時機，\n  // 否則在setMyFeeling()中進行setState時\n  //「會」！再次觸發componentDidUpdate\n  // 造成無限呼叫setMyFeeling()的迴圈。\n  // 修改 > 觸發 Update> Update 觸發修改 > 觸發Update……\n  // 流程︰\n  // 父給方法我 > 我修改了父給我的值 > 值的改變讓我的心情很好。\n\n\n  render() {\n    // 於是爸爸給的 this.props.money 值改變了，爸爸重新render，兒子拿到更多錢。\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u6211\\u662F\\u5152\\u5B50\\uFF0C\\u6211\\u62FF\\u5230\", this.props.money, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.argueForMore,\n        children: \"\\u8981\\u6C42\\u591A30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), this.state.feeling === \"bad\" ? \"我現在不滿意\" : \"我現在滿意了\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Poor_Son;","map":{"version":3,"names":["React","Component","Poor_Son","constructor","props","state","feeling","expectAmount","argueForMore","bind","setMyFeeling","componentDidMount","argue","money","componentDidUpdate","prevProps","prevState","snapshot","setState","render"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/Poor_Son.js"],"sourcesContent":["import React, { Component } from 'react';\r\nclass Poor_Son extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={ \r\n      feeling:\"bad\",\r\n      expectAmount: 100\r\n    }\r\n    this.argueForMore=this.argueForMore.bind(this); // 記得要註冊方法\r\n    this.setMyFeeling=this.setMyFeeling.bind(this);\r\n  }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n    argueForMore(){ // 這個方法，取得爸爸給他的 argue 方法。傳入相應的 target 和 amount 參數\r\n      this.props.argue(\"Son\",this.props.money+40);\r\n    } \r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n      if(prevProps.money!==this.props.money){\r\n          this.setMyFeeling();\r\n      }\r\n    } \r\n\r\n    setMyFeeling(){\r\n      if(this.props.money < this.state.expectAmount) // 爸爸給的機，影響了我的心情。\r\n          this.setState({feeling:\"bad\"})\r\n      else\r\n          this.setState({feeling:\"good\"})\r\n    }\r\n\r\n    // 重點︰\r\n    // 注意要用if(prevProps.money!==this.props.money)去限制呼叫函式的時機，\r\n    // 否則在setMyFeeling()中進行setState時\r\n    //「會」！再次觸發componentDidUpdate\r\n    // 造成無限呼叫setMyFeeling()的迴圈。\r\n    // 修改 > 觸發 Update> Update 觸發修改 > 觸發Update……\r\n\r\n    \r\n    // 流程︰\r\n    // 父給方法我 > 我修改了父給我的值 > 值的改變讓我的心情很好。\r\n\r\n    render(){ // 於是爸爸給的 this.props.money 值改變了，爸爸重新render，兒子拿到更多錢。\r\n        return(\r\n        <div>\r\n          我是兒子，我拿到{this.props.money}\r\n          <button onClick={this.argueForMore}>要求多30</button>\r\n          {(this.state.feeling === \"bad\") ? \"我現在不滿意\" : \"我現在滿意了\"}\r\n        </div>);\r\n    }\r\n}\r\nexport default Poor_Son;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAgC;EAC9BE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAW;MACTC,OAAO,EAAC,KADC;MAETC,YAAY,EAAE;IAFL,CAAX;IAIA,KAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB,CANiB,CAM+B;;IAChD,KAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAlB;EACD;;EAECE,iBAAiB,GAAE,CAClB;;EAEDH,YAAY,GAAE;IAAE;IACd,KAAKJ,KAAL,CAAWQ,KAAX,CAAiB,KAAjB,EAAuB,KAAKR,KAAL,CAAWS,KAAX,GAAiB,EAAxC;EACD;;EAEDC,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAgC;IAChD,IAAGF,SAAS,CAACF,KAAV,KAAkB,KAAKT,KAAL,CAAWS,KAAhC,EAAsC;MAClC,KAAKH,YAAL;IACH;EACF;;EAEDA,YAAY,GAAE;IACZ,IAAG,KAAKN,KAAL,CAAWS,KAAX,GAAmB,KAAKR,KAAL,CAAWE,YAAjC,EAA+C;MAC3C,KAAKW,QAAL,CAAc;QAACZ,OAAO,EAAC;MAAT,CAAd,EADJ,KAGI,KAAKY,QAAL,CAAc;MAACZ,OAAO,EAAC;IAAT,CAAd;EACL,CA7B2B,CA+B5B;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;;;EAEAa,MAAM,GAAE;IAAE;IACN,oBACA;MAAA,+DACW,KAAKf,KAAL,CAAWS,KADtB,eAEE;QAAQ,OAAO,EAAE,KAAKL,YAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,EAGI,KAAKH,KAAL,CAAWC,OAAX,KAAuB,KAAxB,GAAiC,QAAjC,GAA4C,QAH/C;IAAA;MAAA;MAAA;MAAA;IAAA,QADA;EAMH;;AAjD2B;;AAmDhC,eAAeJ,QAAf"},"metadata":{},"sourceType":"module"}