{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Learning\\\\React\\\\hello-world\\\\src\\\\CustomHook\\\\cAgent.js\",\n    _s = $RefreshSig$();\n\nimport useRate from './CustomHook.js'; //<--這個是我們自訂的Hook\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressDIY_cus = props => {\n  _s();\n\n  const percent = useRate(props.value); //接收上層，給下層的自訂Hook\n  // 這個Recursive的方法，可以用在不同的 function component\n  // 我覺得 Hook 就是React的「預設方法」例如 useState\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-back\",\n      style: {\n        backgroundColor: \"rgba(0,0,0,0.2)\",\n        width: \"200px\",\n        height: \"7px\",\n        borderRadius: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          backgroundColor: \"#fe5196\",\n          width: percent.toString() + \"%\",\n          height: \"100%\",\n          borderRadius: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), \"\\u76EE\\u524D\\u6BD4\\u7387: \", percent, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: 90,\n      onClick: props.onClick,\n      children: \"\\u589E\\u52A0\\u6BD4\\u7387\\u81F390\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: 10,\n      onClick: props.onClick,\n      children: \"\\u6E1B\\u5C11\\u6BD4\\u7387\\u81F310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this); // onClick 改了 props.value > 觸動了 useRate > 持續(遞迴)地改了 percent\n};\n\n_s(ProgressDIY_cus, \"ha0hvrzL5iCQhih1XUrrCmzpe0Y=\", false, function () {\n  return [useRate];\n});\n\n_c = ProgressDIY_cus;\nexport default ProgressDIY_cus;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressDIY_cus\");","map":{"version":3,"names":["useRate","React","ProgressDIY_cus","props","percent","value","backgroundColor","width","height","borderRadius","toString","onClick"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/CustomHook/cAgent.js"],"sourcesContent":["\r\nimport useRate from './CustomHook.js'; //<--這個是我們自訂的Hook\r\n\r\nimport React from 'react';\r\nconst ProgressDIY_cus=(props)=>{\r\n\r\n    const percent=useRate(props.value); //接收上層，給下層的自訂Hook\r\n    // 這個Recursive的方法，可以用在不同的 function component\r\n    // 我覺得 Hook 就是React的「預設方法」例如 useState\r\n    \r\n    return(\r\n      <div>\r\n        <div className=\"progress-back\" style={{backgroundColor:\"rgba(0,0,0,0.2)\",width:\"200px\",height:\"7px\",borderRadius:\"10px\"}}>\r\n          <div className=\"progress-bar\" style={{backgroundColor:\"#fe5196\",width:percent.toString()+\"%\",height:\"100%\",borderRadius:\"10px\"}}></div>\r\n        </div>\r\n        目前比率: {percent}%\r\n        <br/>\r\n        <button value={90} onClick={props.onClick}>增加比率至90</button>\r\n        <br/>\r\n        <button value={10} onClick={props.onClick}>減少比率至10</button>\r\n      </div>\r\n    )\r\n\r\n    // onClick 改了 props.value > 觸動了 useRate > 持續(遞迴)地改了 percent\r\n}\r\n\r\nexport default ProgressDIY_cus;"],"mappings":";;;AACA,OAAOA,OAAP,MAAoB,iBAApB,C,CAAuC;;AAEvC,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,eAAe,GAAEC,KAAD,IAAS;EAAA;;EAE3B,MAAMC,OAAO,GAACJ,OAAO,CAACG,KAAK,CAACE,KAAP,CAArB,CAF2B,CAES;EACpC;EACA;;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,eAAf;MAA+B,KAAK,EAAE;QAACC,eAAe,EAAC,iBAAjB;QAAmCC,KAAK,EAAC,OAAzC;QAAiDC,MAAM,EAAC,KAAxD;QAA8DC,YAAY,EAAC;MAA3E,CAAtC;MAAA,uBACE;QAAK,SAAS,EAAC,cAAf;QAA8B,KAAK,EAAE;UAACH,eAAe,EAAC,SAAjB;UAA2BC,KAAK,EAACH,OAAO,CAACM,QAAR,KAAmB,GAApD;UAAwDF,MAAM,EAAC,MAA/D;UAAsEC,YAAY,EAAC;QAAnF;MAArC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,gCAISL,OAJT,oBAKE;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAQ,KAAK,EAAE,EAAf;MAAmB,OAAO,EAAED,KAAK,CAACQ,OAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAA;MAAA;MAAA;IAAA,QAPF,eAQE;MAAQ,KAAK,EAAE,EAAf;MAAmB,OAAO,EAAER,KAAK,CAACQ,OAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CAN2B,CAmB3B;AACH,CApBD;;GAAMT,e;UAEYF,O;;;KAFZE,e;AAsBN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}