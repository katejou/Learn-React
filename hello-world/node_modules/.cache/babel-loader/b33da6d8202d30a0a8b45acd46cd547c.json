{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react'; // 我們需要一個state去記錄並回傳目前螢幕的狀況，所以總共需要的hook為\n\nconst useRWD = () => {\n  _s();\n\n  //這屬於一個自訂的Hook，只是用來分辨在按目前的環境，回傳什麼單字\n  const [device, setDevice] = useState(\"mobile\"); // 給他一個初始值「mobile」\n  // 未加 A) 前\n  // 即使是「電腦」，頭一次開出來，卻會是「手機」\n  // useEffect要在拉窗戶的是候，才會「更新」？不是說在 DidMount 的功能嗎？\n  // 等等DidMount那個部分，是addEventListener而已，所以它沒有進行過handleRWD…\n  // 我們希望在螢幕長寬被改變時，\n  // 根據目前的寬去判斷使用者的裝置是電腦、平板還是手機，\n  // 並且記錄在state中。因此   \n\n  const handleRWD = () => {\n    if (window.innerWidth > 768) setDevice(\"PC\"); //電腦\n    else if (window.innerWidth > 576) setDevice(\"tablet\"); //平板\n    else setDevice(\"mobile\"); //手機\n  }; // 以上用和Boostrap相同的標準來分辨裝置。\n  //B)   \n\n\n  const mounted = useRef();\n  useEffect(() => {\n    if (!mounted.current) {\n      window.addEventListener('resize', handleRWD); //A)\n\n      handleRWD(); // 但這不會變成DidUpdate也在用這個嗎？那設Listener的意思，不是用了兩次？\n      //所以我自己加了B (果然也照樣跑得好好的)\n    } //else { }\n\n\n    return () => {\n      window.removeEventListener('resize', handleRWD);\n    };\n  }, []);\n  return device;\n};\n\n_s(useRWD, \"6yddWMeVciYtmDeyDX4SP3gE6rs=\");\n\nexport default useRWD;","map":{"version":3,"names":["useState","useEffect","useRef","useRWD","device","setDevice","handleRWD","window","innerWidth","mounted","current","addEventListener","removeEventListener"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/Resize25/useRWD.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n// 我們需要一個state去記錄並回傳目前螢幕的狀況，所以總共需要的hook為\r\n\r\nconst useRWD = () => { //這屬於一個自訂的Hook，只是用來分辨在按目前的環境，回傳什麼單字\r\n\r\n    const [device, setDevice] = useState(\"mobile\");// 給他一個初始值「mobile」\r\n    // 未加 A) 前\r\n    // 即使是「電腦」，頭一次開出來，卻會是「手機」\r\n    // useEffect要在拉窗戶的是候，才會「更新」？不是說在 DidMount 的功能嗎？\r\n    // 等等DidMount那個部分，是addEventListener而已，所以它沒有進行過handleRWD…\r\n\r\n    // 我們希望在螢幕長寬被改變時，\r\n    // 根據目前的寬去判斷使用者的裝置是電腦、平板還是手機，\r\n    // 並且記錄在state中。因此   \r\n    const handleRWD = () => {\r\n        if (window.innerWidth > 768)\r\n            setDevice(\"PC\"); //電腦\r\n        else if (window.innerWidth > 576)\r\n            setDevice(\"tablet\"); //平板\r\n        else\r\n            setDevice(\"mobile\"); //手機\r\n    }\r\n    // 以上用和Boostrap相同的標準來分辨裝置。\r\n\r\n    //B)   \r\n    const mounted = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        if (!mounted.current) {\r\n            window.addEventListener('resize', handleRWD);\r\n            //A)\r\n            handleRWD(); // 但這不會變成DidUpdate也在用這個嗎？那設Listener的意思，不是用了兩次？\r\n            //所以我自己加了B (果然也照樣跑得好好的)\r\n        }\r\n        //else { }\r\n\r\n        return (() => {\r\n            window.removeEventListener('resize', handleRWD);\r\n        })\r\n    }, []);\r\n\r\n    return device;\r\n\r\n}\r\n\r\nexport default useRWD;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C,C,CACA;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAAE;EAEnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,QAAD,CAApC,CAFiB,CAE8B;EAC/C;EACA;EACA;EACA;EAEA;EACA;EACA;;EACA,MAAMM,SAAS,GAAG,MAAM;IACpB,IAAIC,MAAM,CAACC,UAAP,GAAoB,GAAxB,EACIH,SAAS,CAAC,IAAD,CAAT,CADJ,CACqB;IADrB,KAEK,IAAIE,MAAM,CAACC,UAAP,GAAoB,GAAxB,EACDH,SAAS,CAAC,QAAD,CAAT,CADC,CACoB;IADpB,KAGDA,SAAS,CAAC,QAAD,CAAT,CANgB,CAMK;EAC5B,CAPD,CAXiB,CAmBjB;EAEA;;;EACA,MAAMI,OAAO,GAAGP,MAAM,EAAtB;EAEAD,SAAS,CAAC,MAAM;IAEZ,IAAI,CAACQ,OAAO,CAACC,OAAb,EAAsB;MAClBH,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,SAAlC,EADkB,CAElB;;MACAA,SAAS,GAHS,CAGL;MACb;IACH,CAPW,CAQZ;;;IAEA,OAAQ,MAAM;MACVC,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCN,SAArC;IACH,CAFD;EAGH,CAbQ,EAaN,EAbM,CAAT;EAeA,OAAOF,MAAP;AAEH,CAzCD;;GAAMD,M;;AA2CN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}