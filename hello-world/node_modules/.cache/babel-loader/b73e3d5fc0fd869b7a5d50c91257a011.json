{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Learning\\\\React\\\\hello-world\\\\src\\\\intergratePractice\\\\ProgressDIY_alt.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProgressDIY_alt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percent: 0 //這個值是還沒有接收到「外部」給的值。\n\n    }; //this.increase = this.increase.bind(this); // 將這兩個方法，寫入componentDidUpdate\n    //this.decrease = this.decrease.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      percent: this.props.value\n    }); //只收爸爸的值一次。\n  } // increase() {\n  //   const percent = this.state.percent + 1;\n  //   this.setState({ percent }, () => {\n  //     if (this.state.percent >= this.props.value) {\n  //       return; //下方的Recursive方法，只有在這個地方才可以跳出。\n  //     }\n  //     this.tm = setTimeout(this.increase, 20); // tm 這個屬性，只是來操作setTimeout？不，在update之中有作判斷。\n  //     // 在setState之中，要實行一個方法，就只能這樣嗎？\n  //   });\n  // }\n  // decrease() {\n  //   const percent = this.state.percent - 1;\n  //   this.setState({ percent }, () => {\n  //     if (this.state.percent <= this.props.value) {\n  //       return;\n  //     }\n  //     this.tmTwo = setTimeout(this.decrease, 20);\n  //   });\n  // }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.value !== this.props.value || prevState.percent !== this.state.percent) {\n      // onClick 是改 props.value，下面才是做 setState 改 state.percent(每次只減 1 )\n      if (this.state.percent > this.props.value) {\n        if (this.tm) //如果是另一個正在進行的話\n          clearTimeout(this.tm); //中止另一個\n        // 不論是正在進行另一個還是這個，都繼續做這個。\n\n        this.tmtwo = setTimeout(() => {\n          this.setState({\n            percent: this.state.percent - 1\n          });\n        }, 20); // 這個單句的本身，就是一個 Recursive ，超級簡潔，注意那些括弧！()=>參數一，參數二\n      } else if (this.state.percent < this.props.value) {\n        if (this.tmTwo) clearTimeout(this.tmTwo);\n        this.tm = setTimeout(() => {\n          this.setState({\n            percent: this.state.percent + 1\n          });\n        }, 20);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-back\",\n        style: {\n          backgroundColor: \"rgba(0,0,0,0.2)\",\n          width: \"200px\",\n          height: \"7px\",\n          borderRadius: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            backgroundColor: \"#fe5196\",\n            width: this.state.percent.toString() + \"%\",\n            height: \"100%\",\n            borderRadius: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \"\\u76EE\\u524D\\u6BD4\\u7387: \", this.state.percent, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: 90,\n        onClick: this.props.onClick,\n        children: \"\\u589E\\u52A0\\u6BD4\\u7387\\u81F390\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: 10,\n        onClick: this.props.onClick,\n        children: \"\\u6E1B\\u5C11\\u6BD4\\u7387\\u81F310\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProgressDIY_alt;","map":{"version":3,"names":["React","Component","ProgressDIY_alt","constructor","props","state","percent","componentDidMount","setState","value","componentDidUpdate","prevProps","prevState","tm","clearTimeout","tmtwo","setTimeout","tmTwo","render","backgroundColor","width","height","borderRadius","toString","onClick"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/intergratePractice/ProgressDIY_alt.js"],"sourcesContent":["import React, { Component } from 'react';\r\nclass ProgressDIY_alt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      percent: 0, //這個值是還沒有接收到「外部」給的值。\r\n    }\r\n    //this.increase = this.increase.bind(this); // 將這兩個方法，寫入componentDidUpdate\r\n    //this.decrease = this.decrease.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ percent: this.props.value }) //只收爸爸的值一次。\r\n  }\r\n\r\n  // increase() {\r\n  //   const percent = this.state.percent + 1;\r\n  //   this.setState({ percent }, () => {\r\n  //     if (this.state.percent >= this.props.value) {\r\n  //       return; //下方的Recursive方法，只有在這個地方才可以跳出。\r\n  //     }\r\n  //     this.tm = setTimeout(this.increase, 20); // tm 這個屬性，只是來操作setTimeout？不，在update之中有作判斷。\r\n  //     // 在setState之中，要實行一個方法，就只能這樣嗎？\r\n  //   });\r\n  // }\r\n\r\n  // decrease() {\r\n  //   const percent = this.state.percent - 1;\r\n  //   this.setState({ percent }, () => {\r\n  //     if (this.state.percent <= this.props.value) {\r\n  //       return;\r\n  //     }\r\n  //     this.tmTwo = setTimeout(this.decrease, 20);\r\n  //   });\r\n  // }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if((prevProps.value!==this.props.value)||(prevState.percent!==this.state.percent)){\r\n        // onClick 是改 props.value，下面才是做 setState 改 state.percent(每次只減 1 )\r\n        if(this.state.percent>this.props.value){\r\n          if(this.tm)  //如果是另一個正在進行的話\r\n            clearTimeout(this.tm) //中止另一個\r\n          // 不論是正在進行另一個還是這個，都繼續做這個。\r\n          this.tmtwo=setTimeout(()=>{this.setState({percent:this.state.percent-1})}, 20)\r\n          // 這個單句的本身，就是一個 Recursive ，超級簡潔，注意那些括弧！()=>參數一，參數二\r\n        }\r\n        else if(this.state.percent<this.props.value){\r\n          if(this.tmTwo)  \r\n            clearTimeout(this.tmTwo)\r\n          this.tm=setTimeout(()=>{this.setState({percent:this.state.percent+1})}, 20)\r\n        }\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"progress-back\" style={{ backgroundColor: \"rgba(0,0,0,0.2)\", width: \"200px\", height: \"7px\", borderRadius: \"10px\" }}>\r\n          <div className=\"progress-bar\" style={{ backgroundColor: \"#fe5196\", width: this.state.percent.toString() + \"%\", height: \"100%\", borderRadius: \"10px\" }}></div>\r\n        </div>\r\n        目前比率: {this.state.percent}%\r\n        <br/>\r\n        <button value={90} onClick={this.props.onClick}>增加比率至90</button>\r\n        <br/>\r\n        <button value={10} onClick={this.props.onClick}>減少比率至10</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProgressDIY_alt;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;EACtCE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,OAAO,EAAE,CADE,CACC;;IADD,CAAb,CAFiB,CAKjB;IACA;EACD;;EAEDC,iBAAiB,GAAG;IAClB,KAAKC,QAAL,CAAc;MAAEF,OAAO,EAAE,KAAKF,KAAL,CAAWK;IAAtB,CAAd,EADkB,CAC2B;EAC9C,CAZqC,CActC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;IACtC,IAAID,SAAS,CAACF,KAAV,KAAkB,KAAKL,KAAL,CAAWK,KAA9B,IAAuCG,SAAS,CAACN,OAAV,KAAoB,KAAKD,KAAL,CAAWC,OAAzE,EAAkF;MAC9E;MACA,IAAG,KAAKD,KAAL,CAAWC,OAAX,GAAmB,KAAKF,KAAL,CAAWK,KAAjC,EAAuC;QACrC,IAAG,KAAKI,EAAR,EAAa;UACXC,YAAY,CAAC,KAAKD,EAAN,CAAZ,CAFmC,CAEb;QACxB;;QACA,KAAKE,KAAL,GAAWC,UAAU,CAAC,MAAI;UAAC,KAAKR,QAAL,CAAc;YAACF,OAAO,EAAC,KAAKD,KAAL,CAAWC,OAAX,GAAmB;UAA5B,CAAd;QAA8C,CAApD,EAAsD,EAAtD,CAArB,CAJqC,CAKrC;MACD,CAND,MAOK,IAAG,KAAKD,KAAL,CAAWC,OAAX,GAAmB,KAAKF,KAAL,CAAWK,KAAjC,EAAuC;QAC1C,IAAG,KAAKQ,KAAR,EACEH,YAAY,CAAC,KAAKG,KAAN,CAAZ;QACF,KAAKJ,EAAL,GAAQG,UAAU,CAAC,MAAI;UAAC,KAAKR,QAAL,CAAc;YAACF,OAAO,EAAC,KAAKD,KAAL,CAAWC,OAAX,GAAmB;UAA5B,CAAd;QAA8C,CAApD,EAAsD,EAAtD,CAAlB;MACD;IAEJ;EACF;;EAEDY,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAK,SAAS,EAAC,eAAf;QAA+B,KAAK,EAAE;UAAEC,eAAe,EAAE,iBAAnB;UAAsCC,KAAK,EAAE,OAA7C;UAAsDC,MAAM,EAAE,KAA9D;UAAqEC,YAAY,EAAE;QAAnF,CAAtC;QAAA,uBACE;UAAK,SAAS,EAAC,cAAf;UAA8B,KAAK,EAAE;YAAEH,eAAe,EAAE,SAAnB;YAA8BC,KAAK,EAAE,KAAKf,KAAL,CAAWC,OAAX,CAAmBiB,QAAnB,KAAgC,GAArE;YAA0EF,MAAM,EAAE,MAAlF;YAA0FC,YAAY,EAAE;UAAxG;QAArC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,gCAIS,KAAKjB,KAAL,CAAWC,OAJpB,oBAKE;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAQ,KAAK,EAAE,EAAf;QAAmB,OAAO,EAAE,KAAKF,KAAL,CAAWoB,OAAvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE;QAAQ,KAAK,EAAE,EAAf;QAAmB,OAAO,EAAE,KAAKpB,KAAL,CAAWoB,OAAvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AAnEqC;;AAqExC,eAAetB,eAAf"},"metadata":{},"sourceType":"module"}