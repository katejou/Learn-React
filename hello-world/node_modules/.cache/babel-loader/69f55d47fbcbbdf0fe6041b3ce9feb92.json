{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Learning\\\\React\\\\hello-world\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root')); // JSX 語法？\n// 1.\n// const element = <h1>Hello world!!!!!</h1>;\n// root.render(element);\n// 2.\n// const element = <button>大家好</button>\n// root.render(element);\n// 3.\n// const element =()=>{\n//   return( <button>大家好</button> );\n// }\n// root.render(element());\n// 4.\n// const testFunction =()=> {\n//   return( \n//       <div> \n//           <button> 大家好 </button>\n//           <h1> 我很好 </h1>\n//       </div>\n//   );\n// }\n// // 一定要加 div 將兩個 DOM 包成一個。\n// root.render(testFunction());\n// 5.\n// 在JSX中需要用到javascript的變數/函式...時，就要用{}包起來\n// const showOne = true;\n// root.render(\n//     <h1> { (showOne === true) ? 1 : 0 } </h1>\n// );\n// 6.\n// 字串中，放入字串{}\n// const styleArgument = { fontSize: '100px', color: 'red' };\n// root.render(\n//   <h1 style = { styleArgument } > Hello, world! </h1>\n// );\n// const styleArgument = { fontSize: '100px', color: 'red' };\n// const element = <h1 style = { styleArgument } > Hello, world! </h1>;\n// root.render(element);\n// {{}} : 在HTML之中，表示\"\"指定屬性的字串？\n// 外面那層括號代表裡面是javascript語法，裡面的括號表示物件型態 <- 還是看不懂\n// const element = <h1 style = { { fontSize: '100px', color: 'red' } } > Hello, world! </h1>;\n// root.render(element);\n// 7.\n// 「class」屬性變成「className」\n\nconst element = /*#__PURE__*/_jsxDEV(\"h1\", {\n  className: \"title\",\n  children: \" Hello, world! \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 17\n}, this);\n\nroot.render(element); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","root","createRoot","document","getElementById","element","render"],"sources":["C:/Users/User/source/repos/Learning/React/hello-world/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root')\n);\n\n// JSX 語法？\n\n// 1.\n// const element = <h1>Hello world!!!!!</h1>;\n// root.render(element);\n\n// 2.\n// const element = <button>大家好</button>\n// root.render(element);\n\n// 3.\n// const element =()=>{\n//   return( <button>大家好</button> );\n// }\n// root.render(element());\n\n// 4.\n// const testFunction =()=> {\n//   return( \n//       <div> \n//           <button> 大家好 </button>\n//           <h1> 我很好 </h1>\n//       </div>\n//   );\n// }\n// // 一定要加 div 將兩個 DOM 包成一個。\n// root.render(testFunction());\n\n// 5.\n// 在JSX中需要用到javascript的變數/函式...時，就要用{}包起來\n// const showOne = true;\n// root.render(\n//     <h1> { (showOne === true) ? 1 : 0 } </h1>\n// );\n\n// 6.\n// 字串中，放入字串{}\n// const styleArgument = { fontSize: '100px', color: 'red' };\n// root.render(\n//   <h1 style = { styleArgument } > Hello, world! </h1>\n// );\n\n// const styleArgument = { fontSize: '100px', color: 'red' };\n// const element = <h1 style = { styleArgument } > Hello, world! </h1>;\n// root.render(element);\n\n// {{}} : 在HTML之中，表示\"\"指定屬性的字串？\n// 外面那層括號代表裡面是javascript語法，裡面的括號表示物件型態 <- 還是看不懂\n// const element = <h1 style = { { fontSize: '100px', color: 'red' } } > Hello, world! </h1>;\n// root.render(element);\n\n\n// 7.\n// 「class」屬性變成「className」\nconst element = <h1 className = \"title\" > Hello, world! </h1>\nroot.render(element);\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,IAAI,GAAGF,QAAQ,CAACG,UAAT,CACXC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADW,CAAb,C,CAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;;AACA,MAAMC,OAAO,gBAAG;EAAI,SAAS,EAAG,OAAhB;EAAA;AAAA;EAAA;EAAA;EAAA;AAAA,QAAhB;;AACAJ,IAAI,CAACK,MAAL,CAAYD,OAAZ,E,CAOA;AACA;AACA;;AAEAL,eAAe"},"metadata":{},"sourceType":"module"}